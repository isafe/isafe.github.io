<?xml version="1.0" encoding="utf-8"?>
<search>
  
    
    <entry>
      <title><![CDATA[Google Authenticator + SSH public key 实现两步认证]]></title>
      <url>%2F2015%2F05%2F29%2FGoogle-Authenticator-SSH-public-key-%E5%AE%9E%E7%8E%B0%E4%B8%A4%E6%AD%A5%E8%AE%A4%E8%AF%81%2F</url>
      <content type="text"><![CDATA[OpenSSH 版本6.2以上才支持AuthenticationMethods 安装依赖：Red Hat, CentOS， Fedora 系统需要安装 pam-devel 包: yum install git pam-devel make gcc-c++ wget -y Ubuntu，Linux Mint，Debian 系统需要安装‘libpam0g-dev包: apt-get install git libpam0g-dev make gcc-c++ wget -y 谷歌身份验证器模块：git clone https://github.com/google/google-authenticator.git cd google-authenticator/libpam ./bootstrap.sh make &amp;&amp; make install 运行google-authenticator开始生成密钥信息google-authenticator Do you want authentication tokens to be time-based (y/n) y 二维码地址 https://www.google.com/chart?chs=200x200&amp;chld=M|0&amp;cht=qr&amp;chl=otpauth://totp/root@localhost%3Fsecret%XXXXXXXXXXXXXX Your new secret key is: XXXXXXXXXXXX Your verification code is 000000 紧急码,只能使用一次 Your emergency scratch codes are: 80801116 43011118 34981118 88321117 93711113 Do you want me to update your &quot;/root/.google_authenticator&quot; file (y/n) y Do you want to disallow multiple uses of the same authentication token? This restricts you to one login about every 30s, but it increases your chances to notice or even prevent man-in-the-middle attacks (y/n) y #每30秒生成一个token By default, tokens are good for 30 seconds and in order to compensate for possible time-skew between the client and the server, we allow an extra token before and after the current time. If you experience problems with poor time synchronization, you can increase the window from its default size of 1:30min to about 4min. Do you want to do so (y/n) y If the computer that you are logging into isn&apos;t hardened against brute-force login attempts, you can enable rate-limiting for the authentication module. By default, this limits attackers to no more than 3 login attempts every 30s. Do you want to enable rate-limiting (y/n) y 配置SSH使用谷歌身份验证器模块编辑/etc/pam.d/sshd 添加如下：auth sufficient pam_google_authenticator.so 注释： auth include password-auth 编辑/etc/ssh/sshd_config,修改PubkeyAuthentication yes ChallengeResponseAuthentication yes AuthenticationMethods publickey,keyboard-interactive PasswordAuthentication no UsePAM yes 重启SSH服务service sshd restart 手机端安装Google 身份验证器Andorid版https://play.google.com/store/apps/details?id=com.google.android.apps.authenticator2iOS版https://itunes.apple.com/cn/app/google-authenticator/id388497605手机端打开google 身份验证器,扫二维码或者输入secret key [root@localhost ~]# ssh 127.0.0.1 Authenticated with partial success. Verification code: 6位动态码 Last login: Thu Aug 14 15:20:16 2015 from 127.0.0.1 [root@localhost ~]#]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Postgresql常用命令]]></title>
      <url>%2F2015%2F05%2F28%2FPostgresql%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%2F</url>
      <content type="text"><![CDATA[连接数据库, 默认的用户和数据库是postgrespsql -U user -d dbname 切换数据库,相当于mysql的use dbname\c dbname 列举数据库，相当于mysql的show databases\l 列举表，相当于mysql的show tables\dt 查看表结构，相当于desc tblname,show columns from tbname\d tblname 查看索引\di 创建数据库：create database dbname; create database dbname OWNER rolename; 删除数据库：drop database dbname; 重命名一个表：alter table oldtablename rename to newtablename; 删除一个表：drop table tablename;]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[CentOS 6.5 源码安装PostgreSQL]]></title>
      <url>%2F2015%2F05%2F27%2FCentOS-6-5-%E6%BA%90%E7%A0%81%E5%AE%89%E8%A3%85PostgreSQL%2F</url>
      <content type="text"><![CDATA[安装依赖：yum install readline readline-devel make zlib zlib-devel 下载源码：wget https://ftp.postgresql.org/pub/source/v9.3.2/postgresql-9.3.2.tar.gz tar -zxf postgresql-9.3.2.tar.gz cd postgresql-9.3.2 ./configure --prefix=/usr/local/pgsql --with-openssl gmake gmake install 添加postgres用户，PostgreSQL的默认超级管理员groupadd postgres adduser -g postgres postgres mkdir /usr/local/pgsql/data chown postgres:postgres /usr/local/pgsql/data 测试su - postgres /usr/local/pgsql/bin/psql -V 初始数据库的存储区间/usr/local/pgsql/bin/initdb -D /usr/local/pgsql/data --locale=en_US.UTF8 -U postgres 启动数据库服务器cp contrib/start-scripts/linux /etc/init.d/postgresql chmod a+x /etc/init.d/postgresql /etc/init.d/postgresql start 连接进数据库/usr/local/pgsql/bin/createdb test /usr/local/pgsql/bin/psql -U postgres test 配置一下动态连接库的搜索路径和环境变量在~./bash_profile添加如下内容： PGHOME=/usr/local/pgsql PGDATA=$PGHOME/data PATH=$PATH:$HOME/bin:$PGHOME/bin export PGHOME export PGDATA export PATH ---------------------------- LD_LIBRARY_PATH=/usr/local/pgsql/lib export LD_LIBRARY_PATH PATH=/usr/local/pgsql/bin:$PATH export PATH PostgreSQL9.3安装完成。]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Hexo静态博客使用指南]]></title>
      <url>%2F2015%2F05%2F24%2FHexo%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97%2F</url>
      <content type="text"><![CDATA[安装Hexo123yum install npm -ynpm config set registry http://registry.npm.taobao.org/npm install hexo-cli -g 12hexo init blogcd blog Hexo常用插件安装与配置1234567npm install hexo --savenpm install hexo-generator-index --savenpm install hexo-generator-archive --savenpm install hexo-generator-category --savenpm install hexo-generator-tag --savenpm install hexo-server --savenpm install hexo-deployer-git --save 1234cd blognpm installcd themesgit clone https://github.com/moretwo/hexo-theme.git]]></content>
    </entry>

    
  
  
</search>
